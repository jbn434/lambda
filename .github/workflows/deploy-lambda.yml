name: Deploy Lambda

on:
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - 'infra/**'
      - '.github/workflows/deploy-lambda.yml'

jobs:
  deploy-lambda:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install dependencies
        working-directory: ./src
        run: npm ci

      - name: 🛠️ Build NestJS app
        working-directory: ./src
        run: npm run build

      - name: 📁 Package Lambda as ZIP
        working-directory: ./src
        run: |
          npm prune --production
          zip -r ../infra/lambda/backend-api.zip dist node_modules package.json -x "**/*.map" "**/*.d.ts" "**/test/**"


      - name: ⚙️ Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: 🌍 Terraform Lambda with VPC Init & Apply
        working-directory: ./infra/lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform init
          terraform apply -auto-approve -var-file=dev.tfvars

      - name: 🌍 Terraform EC2 with Postgress Init & Apply
        working-directory: ./infra/ec2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform init
          terraform apply -auto-approve -var-file=dev.tfvars

      - name: 🌍 Terraform Rest API with Cloudwatch Init & Apply
        working-directory: ./infra/api
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform init
          terraform apply -auto-approve -var-file=dev.tfvars
